{"version":3,"file":"static/js/94.38065163.chunk.js","mappings":"wRAEaA,EAAgBC,EAAAA,EAAAA,IAAH,uHAQbC,EAAcD,EAAAA,EAAAA,GAAH,qEAKXE,EAAgBF,EAAAA,EAAAA,EAAH,0KASbG,EAAaH,EAAAA,EAAAA,IAAH,+F,kBC0CvB,EAvDoB,WAAO,IAAD,IAChBI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAkBV,GACfW,MAAK,SAAAC,GAAQ,OAAIR,EAAWQ,EAASC,KAAKC,QAA7B,IACbC,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,CAACN,IAEJ,IAAMgB,EAAQ,oBAAGT,EAASU,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEzC,OACE,gCACGf,EAAQgB,OAAS,GAChB,iCACE,SAACtB,EAAD,UACGM,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAOC,GAAV,mBACX,SAAC,MAAD,UAAyBA,GAARD,EADN,OAIf,SAACtB,EAAD,WACE,SAAC,KAAD,CACEwB,GAAE,kBAAavB,GACfwB,KAAK,QACLP,MAAO,CAAEC,KAAMF,WAKrB,iCACE,SAAClB,EAAD,UAAe,wBACf,SAACC,EAAD,WACE,SAAC,KAAD,CACEwB,GAAE,kBAAavB,GACfwB,KAAK,QACLP,MAAO,CAAEC,KAAMF,UAKtBX,IACC,SAACV,EAAD,WACE,SAAC,KAAD,QAKT,C,mMC9DK8B,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA+BC,EAA/B,+BAAqC,GAAIC,EAAzC,+BAAkD,CAAC,EAAnD,kBAE2BC,EAAAA,EAAAA,IAAUF,EAAKC,GAF1C,cAEUjB,EAFV,yBAGWA,GAHX,gCAKImB,QAAQC,IAAI,KAAMC,SAClBC,QAAQC,OAAO,IAAIC,MAAM,cAN7B,iFAUO,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQV,EAAgB,GAAD,OACvBF,EADuB,uCACgBC,IAFvC,0GAMA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACQZ,EAAgB,GAAD,OACvBF,EADuB,iCACUC,EADV,iCAC0Ca,EAD1C,gCADvB,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCxC,GAAjC,iFACQ2B,EAAgB,GAAD,OACvBF,EADuB,kBACLzB,EADK,oBACc0B,EADd,oBADvB,0GAMA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAiCzC,GAAjC,iFACQ2B,EAAgB,GAAD,OACvBF,EADuB,kBACLzB,EADK,4BACsB0B,EADtB,oBADvB,0GAMA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCV,GAAjC,iFACQ2B,EAAgB,GAAD,OACvBF,EADuB,kBACLzB,EADK,4BACsB0B,EADtB,oBADvB,0G","sources":["pages/ReviewsPage/ReviewsPage.styled.jsx","pages/ReviewsPage/ReviewsPage.jsx","services/moviesAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  position: relative;\n  width: 160px;\n  height: 160px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const NoReviewsText = styled.p`\n  font-size: 22px;\n  font-weight: 400;\n  text-transform: uppercase;\n  letter-spacing: 15px;\n  text-align: center;\n  padding: 10px 0 20px 0;\n`;\n\nexport const BtnWrapper = styled.div`\n  padding-bottom: 20px;\n  display: flex;\n  justify-content: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/moviesAPI';\nimport { ButtonLink, Loader, ReviewCard } from '../../components/index';\nimport {\n  LoaderWrapper,\n  ReviewsList,\n  NoReviewsText,\n  BtnWrapper,\n} from './ReviewsPage.styled';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieReviews(movieId)\n      .then(response => setReviews(response.data.results))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  const fromPage = location.state?.from ?? '/';\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <>\n          <ReviewsList>\n            {reviews.map(({ id, ...props }) => (\n              <ReviewCard key={id} {...props} />\n            ))}\n          </ReviewsList>\n          <BtnWrapper>\n            <ButtonLink\n              to={`/movies/${movieId}`}\n              text=\"Close\"\n              state={{ from: fromPage }}\n            />\n          </BtnWrapper>\n        </>\n      ) : (\n        <>\n          <NoReviewsText>Reviews are absent</NoReviewsText>\n          <BtnWrapper>\n            <ButtonLink\n              to={`/movies/${movieId}`}\n              text=\"Close\"\n              state={{ from: fromPage }}\n            />\n          </BtnWrapper>\n        </>\n      )}\n      {isLoading && (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '220d205b9d425bbb3fa953ef6e87c55b';\n\nasync function fetchMoviesData(url = '', config = {}) {\n  try {\n    const response = await axios.get(url, config);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n    Promise.reject(new Error('Not found'));\n  }\n}\n\nexport async function fetchTrendingMovies() {\n  return await fetchMoviesData(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport async function fetchSearchMovie(searchQuery) {\n  return await fetchMoviesData(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["LoaderWrapper","styled","ReviewsList","NoReviewsText","BtnWrapper","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","location","useLocation","useEffect","fetchMovieReviews","then","response","data","results","finally","fromPage","state","from","length","map","id","props","to","text","BASE_URL","API_KEY","fetchMoviesData","url","config","axios","console","log","message","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovie","searchQuery","fetchMovieDetails","fetchMovieCredits"],"sourceRoot":""}