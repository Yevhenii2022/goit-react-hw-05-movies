{"version":3,"file":"static/js/518.991c8654.chunk.js","mappings":"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","sources":["pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","utils/notifications.jsx","services/moviesAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  position: relative;\n  width: 160px;\n  height: 160px;\n  margin: 0 auto;\n  padding: 50px;\n`;\n\nexport const TextWrapper = styled.div`\n  width: 720px;\n  margin: 100px auto 0 auto;\n`;\n\nexport const WelcomeText = styled.p`\n  font-size: 42px;\n  letter-spacing: 3px;\n  text-align: center;\n  color: #2a2a2a;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// import usePrevious from 'hooks/usePrevious';\nimport { fetchSearchMovie } from 'services/moviesAPI';\n\n// import { fetchTrendingMovies } from 'services/moviesAPI';\n\nimport * as notify from 'utils/notifications';\n\n// import { showSearchResult } from '../../utils/notifications';\n\n// import PageHeading from 'components/PageHeading';\nimport {\n  PageHeading,\n  MoviesGallery,\n  Loader,\n  SearchForm,\n} from '../../components/index';\n// import SearchForm from 'components/SearchForm';\n// import MoviesGallery from 'components/MoviesGallery';\n// import Loader from 'components/Loader';\nimport { LoaderWrapper, TextWrapper, WelcomeText } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(searchParams.get('query'));\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // const prevSearchQuery = usePrevious(searchQuery);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    fetchSearchMovie(searchQuery)\n      .then(response => {\n        const { results, total_results } = response.data;\n\n        if (total_results === 0) {\n          notify.showIncorrectQuery(searchQuery);\n          moviesReset();\n          return;\n        }\n\n        notify.showSearchResult(total_results);\n        setMovies(results);\n      })\n      .catch(error => {\n        return notify.showQueryError(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [searchQuery]);\n\n  const moviesReset = () => {\n    setMovies([]);\n  };\n\n  const onFormSubmit = searchQuery => {\n    if (searchQuery === '') {\n      notify.showSearchQueryAbsence();\n      return;\n    }\n\n    // if (prevSearchQuery === searchQuery) {\n    //   notify.showSearchQueryRepeat(searchQuery);\n    //   return;\n    // }\n\n    setSearchParams({ query: searchQuery });\n    setSearchQuery(searchQuery);\n    moviesReset();\n  };\n\n  return (\n    <>\n      <PageHeading text=\"Movies\" />\n      <SearchForm onSubmit={onFormSubmit} />\n      {movies.length > 0 ? (\n        <MoviesGallery moviesSet={movies} />\n      ) : !isLoading ? (\n        <TextWrapper>\n          <WelcomeText>\n            All filmmakers are waiting for your search query to show movies.\n          </WelcomeText>\n        </TextWrapper>\n      ) : (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import toast from 'react-hot-toast';\n\nexport const showSearchQueryAbsence = () => {\n  toast('To search for movies you need to specify what you are looking for.', {\n    icon: 'ü§¶‚Äç‚ôÇÔ∏è',\n  });\n};\n\nexport const showSearchResult = totalResults => {\n  toast(`Hooray! We found ${totalResults} movies for you.`, {\n    icon: 'ü§ü',\n  });\n};\n\nexport const showIncorrectQuery = searchQuery => {\n  toast(\n    `Sorry, there are no movies matching your query: \"${searchQuery}\". Please try to search something else.`,\n    {\n      icon: 'ü§∑‚Äç‚ôÇÔ∏è',\n    }\n  );\n};\n\nexport const showQueryError = error => {\n  toast(`You caught the following error: ${error.message}.`, {\n    icon: 'üê∑',\n  });\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '220d205b9d425bbb3fa953ef6e87c55b';\n\nasync function fetchMoviesData(url = '', config = {}) {\n  try {\n    const response = await axios.get(url, config);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n    Promise.reject(new Error('Not found'));\n  }\n}\n\nexport async function fetchTrendingMovies() {\n  return await fetchMoviesData(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport async function fetchSearchMovie(searchQuery) {\n  return await fetchMoviesData(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n}\n\nexport async function fetchMovieDetails(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await fetchMoviesData(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n"],"names":["LoaderWrapper","styled","TextWrapper","WelcomeText","useSearchParams","searchParams","setSearchParams","useState","get","searchQuery","setSearchQuery","movies","setMovies","isLoading","setIsLoading","useEffect","fetchSearchMovie","then","response","totalResults","data","results","total_results","toast","icon","notify","moviesReset","catch","error","message","finally","text","onSubmit","query","length","moviesSet","BASE_URL","API_KEY","fetchMoviesData","url","config","axios","console","log","Promise","reject","Error","fetchTrendingMovies","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}